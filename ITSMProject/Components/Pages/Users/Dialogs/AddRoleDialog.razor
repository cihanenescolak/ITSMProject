@using System.ComponentModel.DataAnnotations
@using ITSMProject.Data
@using Microsoft.AspNetCore.Identity
@inject RoleManager<ApplicationRole> RoleManager
@inject ISnackbar Snackbar

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Add New Role</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm @ref="_form" Model="@_model">
            <MudTextField T="string" @bind-Value="_model.Name" Label="Role Name" Required="true"
                         RequiredError="Role name is required!"/>
            <MudTextField T="string" @bind-Value="_model.Description" Label="Description"
                         HelperText="Optional role description"/>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Add Role</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;

    private MudForm _form = null!;
    private readonly RoleModel _model = new();

    private async Task Submit()
    {
        await _form.Validate();
        if (_form.IsValid)
        {
            var role = new ApplicationRole
            {
                Name = _model.Name,
                Description = _model.Description
            };

            var result = await RoleManager.CreateAsync(role);

            if (result.Succeeded)
            {
                Snackbar.Add("Role created successfully", Severity.Success);
                MudDialog.Close(DialogResult.Ok(role));
            }
            else
            {
                foreach (var error in result.Errors)
                {
                    Snackbar.Add(error.Description, Severity.Error);
                }
            }
        }
    }

    private void Cancel() => MudDialog.Cancel();

    private class RoleModel
    {
        [Required]
        public string Name { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
    }
}
